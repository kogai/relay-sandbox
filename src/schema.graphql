type Node {
  name: String
  description: String
  isPublic: Boolean
}

type Gist {
  nodes: [Node]
}

type User {
  name: String!
  login: String!
  gists(last: Int!): Gist
}

input AddReactionInput {
  subjectId: String!
  content: ReactionContent!
}

type Reaction {
  content: String
}

type Subject {
  id: String
}

type ReactionOutput {
  reaction: Reaction
  subject: Subject
}

enum ReactionContent {
  THUMBS_UP
  THUMBS_DOWN
  LAUGH
  CONFUSED
  HEART
  HOORAY
}

type Mutation {
  addReaction(input: AddReactionInput!): ReactionOutput 
}

type Query {
  viewer: User
}
